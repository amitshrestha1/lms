pipeline {
    agent any

    environment {
        DOCKER_CLI_EXPERIMENTAL = 'enabled'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        git url: 'git@github.com:amitshrestha1/lms.git', credentialsId: 'your-ssh-credentials-id', branch: 'dev'
                        sh 'ls -al'  // List files to verify the structure
                    } catch (err) {
                        echo 'No new changes detected, but continuing with the build...'
                    }
                    }
                }
        }


        stage('Build Docker Images') {
            steps {
                script {
                    // Build the Laravel environment image using the specified Dockerfile
                    docker.build('laravel-env-image', './leavemgmtsys')
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run tests using docker-compose
                    sh 'docker-compose -f ./leavemgmtsys/docker-compose.yaml run --rm laravel-env npm test'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Deploy the application using docker-compose
                    sh 'docker-compose -f ./leavemgmtsys/docker-compose.yaml up -d'
                }
            }
        }
    }

    post {
        always {
            // Cleanup
            sh 'docker-compose -f ./leavemgmtsys/docker-compose.yaml down'
        }
    }
}
