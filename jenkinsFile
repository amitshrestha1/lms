pipeline {
    agent any

    environment {
        DOCKER_CLI_EXPERIMENTAL = 'enabled' // Enable Docker experimental features if needed
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Use the credentials ID for your SSH key
                    try {
                        git url: 'git@github.com:amitshrestha1/lms.git', credentialsId: 'amitshrestha', branch: 'dev'
                    } catch (err) {
                        echo 'No new changes detected, but continuing with the build...'
                    }
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Build Docker images
                    docker.build('nginx-image', './nginx')
                    docker.build('mysql-image', './mysql')
                    docker.build('app-image', './app')
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run tests, adjust according to your setup
                    sh 'docker-compose -f docker-compose.yml run --rm app npm test'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Deploy the application, adjust according to your setup
                    sh 'docker-compose -f docker-compose.yml up -d'
                }
            }
        }
    }

    post {
        always {
            // Cleanup
            sh 'docker-compose -f docker-compose.yml down'
        }
    }
}
